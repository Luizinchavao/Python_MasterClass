                                               # ASIMOV CURSOS #
Uso da IDE Mu                                  PYTHON MASTERCLASS 

                     Programaçao é uma coisa que exige muita pratica, para acustumar bem o cérebro                                                                                      
     
                                       
Iniciando Projeto Web Na Área de Dados


AULA 1 # O que e linguagem de programaçao ok
AULA 2 # Instalando Mu ok
AULA 3 # Hello Word, Numeros e REPL ok
AULA 4 # Strings e Variáveis ok
AULA 5 # Formataçao em String, listas e Slicing 
AULA 6 # Booleanos e Operadores de Comparaçao
AULA 7 # If, Elif e Else
AULA 8 # For

Chaves { }
Colchetes [ ]     ?
-------------------------------------------------------------------------------


AULA 3 - # Hello Word, Numeros e REPL

 # Escreva o seu código aqui :-)

                     
print("Hello Python")  # O print ele printa a mensagem na tela com parametros " " -> aspas

Python tem 2 tipos basicos de números:

INTEIROS   e   DECIMAIS
1 int               0,5 -> Tratado como um float

# Numeros, Matematica

print(1+2)  # Adiçao            
print(1-2)  # Subtraçao 
print(1*2)  # Multiplicaçao
print(1/2)  # Divisao 
print(1**2) # Elevado ao quadrado


print(type (1))             # Checar o tipo de qualquer dado ex numero (1)

--------------------------------------------------------------------------------------------


AULA 4 - # Strings e Variáveis


#Strings -> 

Sao textos " "  Qualquer coisa dentro de strings é um texto .
Possibilidde de registrar string: Escrever entre aspas -> duplas(" ") ou simples->(' ')

Jupyter QtConsole 4.7.7
Python 3.8.12 (default, Oct 17 2021, 23:47:18) [MSC v.1929 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.6.0 -- An enhanced Interactive Python. Type '?' for help.

1+2
Out[1]: 3

print(1+2)
3

"Ola Luizin"
Out[3]: 'Ola Luizin'

type("Ola Luizin")
Out[4]: str

type("1")
Out[5]: str

"1"
Out[6]: '1'

"1,0"
Out[7]: '1,0'

type("1,9")
Out[8]: str

type("1.9")
Out[9]: str

type(1)
Out[10]: int

type(1.9)
Out[11]: float

"Ola, " + "Luizin"         
                                  
Out[12]: 'Ola, Luizin' 


# Alguns conceitos importantes de string -> Concatenaçao de string, ele soma junta as strings.
# Em string = str -> Operaçao de subtraçao (-) nao sao permitidas.
# Em string -> Pode somar com string, com numeros nao da erro. 
# Em string -> Voce pode concatenar str nao inteiros com str nao inteiros ex: TypeError.             

                                Um exemplo de erro:

In [13]: "Ola, " + 2
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
Cell In [13], line 1
----> 1 "Ola, " + 2 
TypeError: can only concatenate str (not "int") to str


# Variaveis->  

São caixas que ele IDE ex: Python C++, cria para agente guardar valores.
Ele vai carregar esses valores com ele a medida que o script estiver executando.
Se agente definir matar o script, ou desligar ele, ele vai jogar fora todas as caixas.
Todas essas informaçoes sao temporarias.


# Criar uma variável: 

Existem regras para criar uma variavel que são:
1 - Não podem começar com números
2 - Podem começar com Underline ou Letras Ex: _raio_ao_quadrado ou raio_ao_quadrado
3 - Podemos ultilizar letras Maiúsculas   Ex: Raio_ao_quadrado
4 - Nomes de variáveis são diferentes se ultilizar letras em Maiúsculas e letras em minúsculas ex acima 3
-> Letras
-> Números 
-> Underline _ Significa -> Sublinhado

Qualque nome " "  usa operador igual e atribuiçao ex: 

b = "Ola "
print(b + "Luizin")


Isso e útil pois ao longo do código vamos precisar trabalhar com esses valores, vamos precisar, 
manipular informações, trocar elas, printar na tela, guardar essas informações que o usuario nos passa.
Variáveis são uma estrutura fundamental em qualquer linguagem de programaçao.


Calcular a Área de um círculo: A= pi.r ** ou A= pi.r^2
A= pi. raio ao quadrado   
A= Área                            
pi= 3,14
R= Raio

-----------------------------------------------------------------------------------------------------


# AULA 5 - Formataçao em String, listas e Slicing


# Utilize a letra f= Mostrando que vou formatar essa string utilizando variaveis
# Dentro das chaves, dado que eu tenha esse f antes da string, sempre que ele encontrar uma chaves, 
# ele vai procurar o que tem dentro e tentar substituir. 
# Variaveis sao caixinhas, já as litas sao caixinhas com compartimentos
# Consigo colocar dentro de uma caixa multiplos objetos ao mesmo tempo
# Existem alguns tipos de dados que vem em Grupos
# Saber manipular esses elementos em grupos é muito importante 
# Listas estao em colchetes [] separados por vírgula ,
# Cada valor que é colocado, pode ser qualquer valor do tipo inteiro, string, float, lista

a = ["Olá", "Luizin"] # Variavel unica que contém 2 valores
# len = Vai dizer qual o tamanho de algum elemento 
# Seleçao de lista, quando for selecionar algo no fim da lista: a = [-1]-> vai ler o último elemento
# Seleçao de intervalo na lista com dois pontos :# Ele vai permitir que faça cortes na lista.
# Ex: a[1:4]-> vai ler o segundo elemento, o terceiro e nao vai ler o quarto elemento da lista.
# Uma string também é iteiravel de caracteres, é a soma de todas as letras e dos espaços que existirem
# Tudo que fiz com listas, posso fazer com strings, posso perguntar o tamanho com (len)
# Ou posso selecionar caractere de maneira individual com [] ex: b[2] ou b[0:4]
# O igual = é para definir a variavel
# Uma pincelada no conceito de Slicing é importante para que consiga trabalhar com Dashboard depois
# Slicing para podermos fazer manipulaçao de dados.


-------------------------------------------------------------------------------------------------------

Até aqui já vimos: NÚMEROS - VARIAVEIS - MÉTODOS - LISTA -UM POUCO DE SLICING PRÓXIMO PASSO ->SOBRE BOOLEANOS.

#1 igual = atribuiçao de nome #2 iguais =  
--------------------------------------------------------------------------------------------------------


AULA 6 # Booleanos e Operadores de Comparaçao


# O "sim e o nao" de uma linguagem de programaçao. O Verdadeiro ou Falso.
# True e False = Entender operar True e False é muito importante. Type(Ele lê o tipo)
# Ferramentas: Operadores de Comparaçao Símbolo de maior > e menor < 
# Faço uma pergunta para o computador a resposta dele é: Verdadeiro ou Falso
a = 3 > 2   # É maior do que 2 ?             
b = 3 < 2   # É menor do que 2 ?              
c = 2 >= 2  # É maior ou igual do que 2 ?   
d = 2 <= 2  # É menor ou igual do que 2 ?      
e = 2 != 2  # É diferente do que 2 ?                               
False       #Sao Operadores que vamos combinar apenas com: Boolianos
True        #Principais tipos de Comparações. Misturar essas comparações,
            #Com outros elementos como AND e OR
            #Utilizando parametros para agrupar essas operações


b
Out[20]: [2]

b = "luizin"

len(b)
Out[22]: 6

b[0]
Out[23]: 'l'

b[2]
Out[24]: 'i'

b[0:4]
Out[25]: 'luiz'

len(b)
Out[26]: 6

b[0]
Out[27]: 'l'

type (True)
Out[28]: bool

type(False)
Out[29]: bool

a
Out[30]: ['Olá', 'Luizin', 2, 2.5, 'teste']

a = 3 > 2

a
Out[32]: True

b = 3 < 2

b
Out[34]: False

c = 2 >= 2

c
Out[36]: True

d = 2 <= 2

d
Out[38]: True

e = 2 != 2

e
Out[40]: False

True and True
Out[41]: True

(3>2) and (2>1)
Out[42]: True

(3>2) or (2>1)
Out[43]: True

----------------------------------------------------------------------------------------------


AULA 7 # If, Elif e Else


A penultima aula dessa parte introdutória de Python, vamos falar sobre Estrutura de Controle de Fluxo, 
ou seja, agente permitir que o código va para um lado e va para um outro, dependendo da regra pré-estabelecida

#if -> traduçao literal é-> se. if -> vem combinado com um booliano
# É eu perguntando para o computador, se alguma coisa for verdadeira, quero que faça algo.
# else -> Traduçao literal: "Se nao"

If combinado com boleano comparado com operadores de Operaçao de cadeias, estamos decidindo que trechos ele vai 
executar ou nao, vai ignorar alguns trechos e vai executar outros trechos

idade = 18
possui_carteira = False

if(idade >= 18) and possui_carteira: 
    print("Você pode dirigir") 
elif possui_carteira:
    print("Você apenas possui carteira. Espere a idade")       
else: 
    print("Você nao pode dirigir")    

Essa aula foi uma estrutura de controle de fluxo, define para onde nosso código vai

-----------------------------------------------------------------------------------------------------------------

AULA 8 # For - Repetiçao - é a forma de ficar repetindo o código até que uma condiçao seja verdadeira.
Vai ajudar agente vai ser super útil que vai ver nossos Review e vai printar, tem review, printa, tem review...
Ou seja, vai ficar vendo todos até acabar os Review
